buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    //querydsl plugins 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.spring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    //mysql
    implementation 'mysql:mysql-connector-java'

    //h2
    runtimeOnly 'com.h2database:h2'

    //hibernate
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    //thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
}

tasks.named('test') {
    useJUnitPlatform()
}

// querydsl에서 사용할 경로 설정
def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

sourceSets {
    intTest {
        java.srcDir "$projectDir/src/intTest/java"
        resources.srcDir "$projectDir/src/intTest/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }

    main.java.srcDir querydslDir
}

configurations {
    intTestImplementation.extendsFrom implementation
    intTestImplementation.extendsFrom testImplementation
    intTestRuntimeOnly.extendsFrom testRuntimeOnly

    querydsl.extendsFrom compileClasspath
}

task intTest(type: Test) {
    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    useJUnitPlatform()
}

check.dependsOn intTest